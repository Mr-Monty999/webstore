name: users
description: ''
endpoints:
  -
    httpMethods:
      - POST
    uri: api/users/login
    metadata:
      title: 'authenticated user and get the token'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    queryParameters: []
    bodyParameters:
      name:
        name: name
        description: ''
        required: false
        example: null
        type: string
        custom: []
      password:
        name: password
        description: ''
        required: false
        example: null
        type: string
        custom: []
    responses:
      -
        status: 200
        content: |-
          {
          "id": 1,
          "name": "owner",
          "photo": null,
          "email_verified_at": null,
          "created_at": "2022-11-14T18:51:05.000000Z",
          "updated_at": "2022-11-14T18:51:05.000000Z",
          "token": "3|x8a2zohvUSl6HcHoqqzMjouVY9XP138LvelPofcM",
          "permissions": [],
          "roles": [
          {
          "id": 1,
          "name": "owner",
          "guard_name": "web",
          "created_at": "2022-11-14T18:51:06.000000Z",
          "updated_at": "2022-11-14T18:51:06.000000Z",
          "pivot": {
          "model_id": 1,
          "role_id": 1,
          "model_type": "App\\Models\\User"
          },
          "permissions": []
          }
          ]
          }
        headers: []
        description: '200'
    responseFields: []
  -
    httpMethods:
      - DELETE
    uri: api/users/delete-all
    metadata:
      title: 'Remove all the users from database except the user with (owner role).'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    queryParameters: []
    bodyParameters: []
    responses:
      -
        status: 200
        content: '{}'
        headers: []
        description: '200'
    responseFields: []
  -
    httpMethods:
      - PUT
    uri: 'api/users/{user}/privacy'
    metadata:
      title: 'Update the specified user privacy.'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: multipart/form-data
      Accept: application/json
    urlParameters:
      user:
        name: user
        description: 'The id of the user'
        required: true
        example: 2
        type: integer
        custom: []
    queryParameters: []
    bodyParameters:
      name:
        name: name
        description: ''
        required: true
        example: ab
        type: string
        custom: []
      photo:
        name: photo
        description: 'Must be an image.'
        required: false
        example: null
        type: file
        custom: []
      password:
        name: password
        description: ''
        required: false
        example: null
        type: string
        custom: []
    responses:
      -
        status: 200
        content: |-
          {
          "id": 1,
          "name": "owner",
          "photo": null,
          "email_verified_at": null,
          "created_at": "2022-11-14T18:51:05.000000Z",
          "updated_at": "2022-11-14T18:51:05.000000Z",
          "live_photo_path": "http://localhost:8000/storage",
          "roles": [
          {
          "id": 1,
          "name": "owner",
          "guard_name": "web",
          "created_at": "2022-11-14T18:51:06.000000Z",
          "updated_at": "2022-11-14T18:51:06.000000Z",
          "pivot": {
          "model_id": 1,
          "role_id": 1,
          "model_type": "App\\Models\\User"
          },
          "permissions": []
          }
          ]
          }
        headers: []
        description: '200'
    responseFields: []
  -
    httpMethods:
      - GET
    uri: api/users
    metadata:
      title: 'Display all users (paginated) with their roles (paginated) and permissions.'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    queryParameters: []
    bodyParameters: []
    responses:
      -
        status: 200
        content: |-
          {
          "current_page": 1,
          "data": [
          {
          "id": 3,
          "name": "f",
          "photo": "users/nCOQdMlXQVHwk9eVdvy1M0FHVTTiCvlL6SpcNm7l.jpg",
          "email_verified_at": null,
          "created_at": "2022-11-15T12:01:24.000000Z",
          "updated_at": "2022-11-15T12:01:24.000000Z",
          "roles": []
          },
          {
          "id": 4,
          "name": "owner",
          "photo": null,
          "email_verified_at": null,
          "created_at": "2022-11-15T12:07:34.000000Z",
          "updated_at": "2022-11-15T12:07:34.000000Z",
          "roles": [
          {
          "id": 1,
          "name": "owner",
          "guard_name": "web",
          "created_at": "2022-11-14T18:51:06.000000Z",
          "updated_at": "2022-11-14T18:51:06.000000Z",
          "pivot": {
          "model_id": 4,
          "role_id": 1,
          "model_type": "App\\Models\\User"
          },
          "permissions": []
          }
          ]
          }
          ],
          "first_page_url": "http://localhost:8000/api/users?page=1",
          "from": 1,
          "last_page": 1,
          "last_page_url": "http://localhost:8000/api/users?page=1",
          "links": [
          {
          "url": null,
          "label": "&laquo; Previous",
          "active": false
          },
          {
          "url": "http://localhost:8000/api/users?page=1",
          "label": "1",
          "active": true
          },
          {
          "url": null,
          "label": "Next &raquo;",
          "active": false
          }
          ],
          "next_page_url": null,
          "path": "http://localhost:8000/api/users",
          "per_page": 5,
          "prev_page_url": null,
          "to": 2,
          "total": 2
          }
        headers: []
        description: '200'
    responseFields: []
  -
    httpMethods:
      - POST
    uri: api/users
    metadata:
      title: 'Store a newly created user in database.'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: multipart/form-data
      Accept: application/json
    urlParameters: []
    queryParameters: []
    bodyParameters:
      name:
        name: name
        description: ''
        required: true
        example: eum
        type: string
        custom: []
      password:
        name: password
        description: ''
        required: true
        example: omnis
        type: string
        custom: []
      photo:
        name: photo
        description: 'Must be an image.'
        required: false
        example: null
        type: file
        custom: []
    responses:
      -
        status: 201
        content: |-
          {
          "name": "f",
          "photo": "users/nCOQdMlXQVHwk9eVdvy1M0FHVTTiCvlL6SpcNm7l.jpg",
          "updated_at": "2022-11-15T12:01:24.000000Z",
          "created_at": "2022-11-15T12:01:24.000000Z",
          "id": 3,
          "live_photo_path": "http://localhost:8000/storage/users/nCOQdMlXQVHwk9eVdvy1M0FHVTTiCvlL6SpcNm7l.jpg",
          "permissions": [],
          "roles": []
          }
        headers: []
        description: '201'
    responseFields: []
  -
    httpMethods:
      - GET
    uri: 'api/users/{id}'
    metadata:
      title: 'Display the specified user with it roles (paginated) and permissions.'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the user.'
        required: true
        example: 3
        type: integer
        custom: []
    queryParameters: []
    bodyParameters: []
    responses:
      -
        status: 200
        content: |-
          {
          "id": 4,
          "name": "owner",
          "photo": null,
          "email_verified_at": null,
          "created_at": "2022-11-15T12:07:34.000000Z",
          "updated_at": "2022-11-15T12:07:34.000000Z",
          "live_photo_path": "http://localhost:8000/storage",
          "roles": [
          {
          "id": 1,
          "name": "owner",
          "guard_name": "web",
          "created_at": "2022-11-14T18:51:06.000000Z",
          "updated_at": "2022-11-14T18:51:06.000000Z",
          "pivot": {
          "model_id": 4,
          "role_id": 1,
          "model_type": "App\\Models\\User"
          },
          "permissions": []
          }
          ]
          }
        headers: []
        description: '200'
    responseFields: []
  -
    httpMethods:
      - PUT
      - PATCH
    uri: 'api/users/{id}'
    metadata:
      title: 'Update the specified user in database.'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: multipart/form-data
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the user.'
        required: true
        example: 3
        type: integer
        custom: []
    queryParameters: []
    bodyParameters:
      name:
        name: name
        description: ''
        required: true
        example: sed
        type: string
        custom: []
      photo:
        name: photo
        description: 'Must be an image.'
        required: false
        example: null
        type: file
        custom: []
      password:
        name: password
        description: ''
        required: false
        example: null
        type: string
        custom: []
    responses:
      -
        status: 200
        content: |-
          {
          "id": 1,
          "name": "owner",
          "photo": null,
          "email_verified_at": null,
          "created_at": "2022-11-14T18:51:05.000000Z",
          "updated_at": "2022-11-14T18:51:05.000000Z",
          "live_photo_path": "http://localhost:8000/storage",
          "roles": [
          {
          "id": 1,
          "name": "owner",
          "guard_name": "web",
          "created_at": "2022-11-14T18:51:06.000000Z",
          "updated_at": "2022-11-14T18:51:06.000000Z",
          "pivot": {
          "model_id": 1,
          "role_id": 1,
          "model_type": "App\\Models\\User"
          },
          "permissions": []
          }
          ]
          }
        headers: []
        description: '200'
    responseFields: []
  -
    httpMethods:
      - DELETE
    uri: 'api/users/{id}'
    metadata:
      title: 'Remove the specified user from database.'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the user.'
        required: true
        example: 3
        type: integer
        custom: []
    queryParameters: []
    bodyParameters: []
    responses:
      -
        status: 200
        content: |-
          {
          "id": 1,
          "name": "owner",
          "photo": "users/XsT2cz0DW3fcyk1koDBNsD0rjHxLgmmks5hy2tG4.jpg",
          "email_verified_at": null,
          "created_at": "2022-11-14T18:51:05.000000Z",
          "updated_at": "2022-11-15T12:05:31.000000Z",
          "live_photo_path": "http://localhost:8000/storage/users/XsT2cz0DW3fcyk1koDBNsD0rjHxLgmmks5hy2tG4.jpg"
          }
        headers: []
        description: '200'
    responseFields: []
