name: users
description: ''
endpoints:
  -
    httpMethods:
      - POST
    uri: api/users/login
    metadata:
      title: 'authenticated user and get the token'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    queryParameters: []
    bodyParameters:
      name:
        name: name
        description: ''
        required: false
        example: null
        type: string
        custom: []
      password:
        name: password
        description: ''
        required: false
        example: null
        type: string
        custom: []
    responses: []
    responseFields: []
  -
    httpMethods:
      - GET
    uri: api/users
    metadata:
      title: 'Display all users (paginated) with their roles (paginated) and permissions.'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    queryParameters: []
    bodyParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
    responseFields: []
  -
    httpMethods:
      - DELETE
    uri: api/users/delete-all
    metadata:
      title: 'Remove all the users from database except the user with (owner role).'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    queryParameters: []
    bodyParameters: []
    responses: []
    responseFields: []
  -
    httpMethods:
      - PUT
    uri: 'api/users/{user}/privacy'
    metadata:
      title: 'Update the specified user privacy.'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: multipart/form-data
      Accept: application/json
    urlParameters:
      user:
        name: user
        description: 'The user.'
        required: true
        example: 1
        type: integer
        custom: []
    queryParameters: []
    bodyParameters:
      name:
        name: name
        description: ''
        required: true
        example: aut
        type: string
        custom: []
      photo:
        name: photo
        description: 'Must be an image.'
        required: false
        example: null
        type: file
        custom: []
      password:
        name: password
        description: ''
        required: false
        example: null
        type: string
        custom: []
    responses: []
    responseFields: []
  -
    httpMethods:
      - POST
    uri: api/users
    metadata:
      title: 'Store a newly created user in database.'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: multipart/form-data
      Accept: application/json
    urlParameters: []
    queryParameters: []
    bodyParameters:
      name:
        name: name
        description: ''
        required: true
        example: omnis
        type: string
        custom: []
      password:
        name: password
        description: ''
        required: true
        example: possimus
        type: string
        custom: []
      photo:
        name: photo
        description: 'Must be an image.'
        required: false
        example: null
        type: file
        custom: []
    responses: []
    responseFields: []
  -
    httpMethods:
      - GET
    uri: 'api/users/{id}'
    metadata:
      title: 'Display the specified user with it roles (paginated) and permissions.'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the user.'
        required: true
        example: 1
        type: integer
        custom: []
    queryParameters: []
    bodyParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
    responseFields: []
  -
    httpMethods:
      - PUT
      - PATCH
    uri: 'api/users/{id}'
    metadata:
      title: 'Update the specified user in database.'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: multipart/form-data
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the user.'
        required: true
        example: 1
        type: integer
        custom: []
    queryParameters: []
    bodyParameters:
      name:
        name: name
        description: ''
        required: true
        example: aperiam
        type: string
        custom: []
      photo:
        name: photo
        description: 'Must be an image.'
        required: false
        example: null
        type: file
        custom: []
      password:
        name: password
        description: ''
        required: false
        example: null
        type: string
        custom: []
    responses: []
    responseFields: []
  -
    httpMethods:
      - DELETE
    uri: 'api/users/{id}'
    metadata:
      title: 'Remove the specified user from database.'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the user.'
        required: true
        example: 1
        type: integer
        custom: []
    queryParameters: []
    bodyParameters: []
    responses: []
    responseFields: []
